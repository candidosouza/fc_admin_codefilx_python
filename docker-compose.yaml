version: '3'

services:
    app:
      build: .
      container_name: app
      entrypoint: ./.docker/entrypoint.sh
      # command: ./.docker/entrypoint.sh
      tty: true
      volumes:
        - .:/home/python/app
      ports:
        - 8000:8000

    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
      container_name: elasticsearch
      environment:
        - node.name=elasticsearch
        - cluster.name=es-docker-cluster
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - http.cors.enabled=true
        - http.cors.allow-origin="*"
        - discovery.type=single-node
      ulimits:
        memlock:
          soft: -1
          hard: -1
      volumes:
        - ./.docker/.elastic/elasticsearch_data:/usr/share/elasticsearch/data
      ports:
        - 9200:9200
    
    kibana:
      image: docker.elastic.co/kibana/kibana:7.13.0
      container_name: kibana
      ports:
        - 5601:5601
      environment:
        ELASTICSEARCH_URL: http://elasticsearch:9200
        ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'

    metricbeat:
      image: docker.elastic.co/beats/metricbeat:7.13.0
      container_name: metricbeat
      user: root
      volumes:      
        - /var/run/docker.sock:/var/run/docker.sock
        - ./.docker/.elastic/beats/metric/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
      restart: on-failure
      command: metricbeat -e -strict.perms=false

    heartbeat:
      image: docker.elastic.co/beats/heartbeat:7.13.0
      container_name: heartbeat
      volumes:      
        - ./.docker/.elastic/beats/heartbeat/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml
      environment: 
        - setup.kibana.host=kibana:5601

    apm:
      image: docker.elastic.co/apm/apm-server-oss:7.13.0
      container_name: apm
      volumes:      
        - ./.docker/.elastic/apm/apm-server.yml:/usr/share/apm-server/apm-server.yml
      ports:
        - "8200:8200"
      restart: on-failure

    prometheus:
      image: prom/prometheus
      container_name: prometheus
      depends_on: 
        - cadvisor
      ports:
        - 9090:9090
      command:
        - --config.file=/etc/prometheus/prometheus.yml
      volumes:
        # - ./.docker/.prometheus/prometheus_data:/prometheus
        - ./.docker/.prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml:ro

    grafana:
      image: grafana/grafana
      ports:
        - "3000:3000"
      container_name: grafana
      restart: always
      depends_on:
        - prometheus
      volumes:
        - ./.docker/.grafana/grafana_data:/var/lib/grafana
      user: "$UID:$GID"

    cadvisor:
      image: gcr.io/cadvisor/cadvisor:latest
      container_name: cadvisor
      user: root
      ports:
        - 8080:8080
      volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:rw
        - /sys:/sys:ro
        - /var/run/docker.sock:/var/run/docker.sock
