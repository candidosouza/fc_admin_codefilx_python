name: fc-admin-codeflix-python-workflow
on: 
  pull_request:
    branches:
      - develop

jobs:
  check-application:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pdm sync -d -G testing

      - name: Run Tests
        run: |
          python pytest --ignore __pypackages__

      # - name: Run sonarqube
      #   uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
   
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # - name: Build and push image to Dockerhub
      #   uses: docker/build-push-action@v1.1.0
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      #     repository: ${{ secrets.DOCKERHUB_USERNAME }}/fc_admin_codeflix_python
      #     tags: ${{ github.sha }}, latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fc_admin_codeflix_python:latest

